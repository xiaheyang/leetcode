#1
//     bool sreachhalf(vector<int>& nums, int target,int begin ,int end)
//     {
//         if(begin>end) return false;
//         int size=nums.size();
//         int center=(begin+end)/2;
//         if(nums[center%size]==target) return true;
//         else if(nums[center%size]>target)
//         {
//             return sreachhalf(nums,target,begin,center-1);
//         }
//         else
//         {
//             return sreachhalf(nums,target,center+1,end);
        
//         }
//     }
//     bool search(vector<int>& nums, int target) {
//         for(int i=1;i<nums.size();++i)
//         {
//             if(nums[i]<nums[i-1])
//             {
//                 return sreachhalf(nums,target,i,i+nums.size()-1);
//             }
//         }
//         return sreachhalf(nums,target,0,nums.size()-1);
//     }
    bool search(vector<int>& nums, int target) {
        int begin=0;
        int end=nums.size()-1;
        while(begin<=end)
        {
            int center=(begin+end)/2;
            if(nums[center]==target) return true;
            if(nums[center]==nums[begin]&&nums[center]==nums[end])
            {
                ++begin;
                --end;
            }
            else if(nums[begin]>=nums[end])
            {
                if(nums[begin]<=nums[center])
                {
                    if(nums[begin]<=target&&target<nums[center])
                    {
                        end=center-1;
                    }
                    else
                    {
                         begin=center+1;
                    }
                }
                else
                {
                    if(nums[center]<target&&target<=nums[end])
                    {
                        
                        begin=center+1;
                    }
                    else
                    {
                         end=center-1;
                    }
                }
            }
            else
            {
                if(nums[center]>target)
                {
                    end=center-1;
                }
                else
                {
                    begin=center+1;
                }
            }
        }
        return false;
    }