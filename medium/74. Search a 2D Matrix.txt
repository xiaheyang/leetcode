#1
bool search(vector<vector<int>>& matrix, int target,int mod,int left,int right)
    {
        if(mod==-1)
        {
            if(right-left<=1)//5.[1,3]3出错
            {
                if(matrix[right][0]==target)//6.忘记等于的情况
                {
                    return true;
                }
                else if(matrix[right][0]<target)
                {
                    return search(matrix, target,right,0,matrix[right].size()-1);
                }
                else
                {
                    return search(matrix, target,left,0,matrix[left].size()-1);
                }

            }
            int center=(left+right)/2;
            if(matrix[center][0]==target)
            {
                return true;
            }
            else if(matrix[center][0]>target)
            {
                return search(matrix, target,mod,left,center-1);
            }
            else
            {
                return search(matrix, target,mod,center,right);
            }
        }
        else
        {
            if(left<0||right>matrix[mod].size()-1)//3.[1,3,5]0出错
            {
                return false;
            }
            if(left-right>=0)//1.不存在会直接出现负数
            {
                if(matrix[mod][right]==target)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            int center=(left+right)/2;
            if(matrix[mod][center]==target)
            {
                return true;
            }
            else if(matrix[mod][center]>target)//4.手误
            {
                return search(matrix, target,mod,left,center-1);
            }
            else
            {
                return search(matrix, target,mod,center+1,right);
            }
        }
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.empty()||matrix[0].empty())//2.[[]]出错
        {
            return false;
        }
        return search(matrix, target,-1,0,matrix.size()-1);
    }