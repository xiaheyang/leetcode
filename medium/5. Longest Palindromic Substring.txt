#1
        if(s.size()<2)
            return s;
        int max=0;
        int maxCenterPos = 0;
        for(int i=0;i<s.size()-1;++i)
        {
            int issingle=0;
//           if(s[i]==s[i+1])
//               issingle=1;
            int len=0;
//            maxCenterPos=i;
            while(s[i-len]==s[i+len+issingle])
            {
                if(max<1+2*len+issingle)//3.又忘记比较了
                {
                    max=1+2*len+issingle;
                    maxCenterPos=i;
                }
                ++len;
                if(i-len==-1||i+len+issingle==(int)s.size())//2.判断位置
                    break;
            }
            if(s[i]==s[i+1])//4.存在双重身份者“CCC”6.出界问题
            {
                int len=0;//5.忘记初始化
                issingle=1;
                while(s[i-len]==s[i+len+issingle])
                {
                    if(max<1+2*len+issingle)
                    {
                        max=1+2*len+issingle;
                        maxCenterPos=i;
                    }
                    ++len;
                    if(i-len==-1||i+len+issingle==(int)s.size())
                        break;
                }
            }
               
            
        }
        string result(s,maxCenterPos-(max-1)/2,max);//1.输出方式7.粗心
        return result;