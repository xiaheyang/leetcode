#1
    int divide(int idividend, int idivisor) {
/*5.超时
        if(divisor==0||(dividend==-2147483648&&divisor==-1))//3.溢出处理
        {
            return 2147483647;
        }
        if(divisor==1)//4./1超时
            return dividend;
        if(divisor==-1)
            return 0-dividend;
        int result=0;
        if(dividend>=0)
        {
            if(divisor>=0)
            {
                while(dividend-divisor>=0)//1.不减结果加一2.整除
                {
                    ++result;
                    dividend=dividend-divisor;
                }
                    
            }
            else
            {
                while(dividend+divisor>=0)
                {
                    --result;
                    dividend=dividend+divisor;
                }
            }
        }
        else
        {
            if(divisor<0)
            {
                while(dividend-divisor<=0)
                {
                    ++result;
                    dividend=dividend-divisor;
                }
            }
            else
            {
                while(dividend+divisor<=0)
                {
                    --result;
                    dividend=dividend+divisor;
                }
            }
        }
        return result;
    }
*///1.各种longint以及边界处理
        long int divisor=idivisor;
        long int dividend=idividend;
        if(divisor==0)
        {
            return 2147483647;
        }
/*//可去        
        if(divisor==1)
            return dividend;
        if(divisor==-1)
        {
            if(0-dividend<-2147483648||0-dividend>2147482647)
                return 2147483647;
            return   0-dividend; 
        }
*/
        int state=0;
        if(dividend>=0)
        {
            if(divisor>0)
            {
                state=1;
            }
            else
            {
                state=2;
                divisor=0-divisor;
                    
            }
        }
        else
        {
            dividend=0-dividend;
            if(divisor>0)
            {
                state=2;
            }
            else
            {
                state=1;
                divisor=0-divisor;
            }
        }
        long int returnnum=0;      
        while(dividend>=divisor)
        {
           long int first=divisor;
           long int num=1; 
            while(dividend-first>=first)
            {
                first=first+first;
                num=num+num;
            }
            dividend=dividend-first;
            returnnum=returnnum+num;
        }
            
        if(state==1)
        {
            if(returnnum>2147483647)
                return 2147483647;
            return   (int)returnnum;            
        }

        else
        {
            if(0-returnnum<-2147483648)
                return 2147483647;
            return   (int)(0-returnnum);            
        }

    }