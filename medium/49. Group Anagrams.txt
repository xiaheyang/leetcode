#1
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        vector<vector<string> > result;
        vector<string> strindex;
        for(int i=0;i<strs.size();++i)
        {
            string strofindex(strs[i]);
            sort(strofindex.begin(),strofindex.end());
            int pos=-1;
            for(int j=0;j<strindex.size();++j)
            {
                if(strindex[j]==strofindex)
                {
                    pos=j;//1.¸³Öµ°¡
                    break;
                }
            }
            if(pos==-1)
            {
                strindex.push_back(strofindex);
                vector<string> newstr;
                newstr.push_back(strs[i]);
                result.push_back(newstr);
            }
            else
            {
                result[pos].push_back(strs[i]);
            }
            
        }
        return result;
    }
#2
vector<vector<string>> groupAnagrams(vector<string>& strs) {
        map<string,vector <string> > mapre;
        for(int i=0;i<strs.size();++i)
        {
            string order=strs[i];
            sort(order.begin(),order.end());
            mapre[order].push_back(strs[i]);
        }
        vector<vector<string> > ret;
        for(auto mp:mapre)
        {
            ret.push_back(mp.second);
        }
        return ret;
    }